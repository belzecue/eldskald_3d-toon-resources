[gd_scene load_steps=69 format=2]

[ext_resource path="res://change-colors.gd" type="Script" id=1]
[ext_resource path="res://deferred-toon-shader-demo/viewport.gd" type="Script" id=2]
[ext_resource path="res://assets/meshes/cylinder01.obj" type="ArrayMesh" id=3]
[ext_resource path="res://assets/meshes/cone01.obj" type="ArrayMesh" id=4]
[ext_resource path="res://assets/meshes/pineleaves00.obj" type="ArrayMesh" id=5]
[ext_resource path="res://assets/meshes/red-blue-cube-01.obj" type="ArrayMesh" id=6]
[ext_resource path="res://player.tscn" type="PackedScene" id=7]
[ext_resource path="res://assets/meshes/torus01.obj" type="ArrayMesh" id=8]
[ext_resource path="res://assets/meshes/ground.obj" type="ArrayMesh" id=9]
[ext_resource path="res://assets/textures/ibm-pc-colors.png" type="Texture" id=10]
[ext_resource path="res://outline-shader-demo/distances.tres" type="Material" id=11]
[ext_resource path="res://rotate.gd" type="Script" id=12]
[ext_resource path="res://assets/meshes/treetrunk00.obj" type="ArrayMesh" id=13]
[ext_resource path="res://outline-shader-demo/views.tres" type="Material" id=14]
[ext_resource path="res://icon.png" type="Texture" id=15]
[ext_resource path="res://demo.gd" type="Script" id=16]
[ext_resource path="res://outline-shader-demo/normals.tres" type="Material" id=17]
[ext_resource path="res://deferred-toon-shader-demo/outlines.shader" type="Shader" id=18]
[ext_resource path="res://deferred-toon-shader-demo/lighting-pass.shader" type="Shader" id=19]
[ext_resource path="res://deferred-toon-shader-demo/albedo-pass.shader" type="Shader" id=20]
[ext_resource path="res://deferred-toon-shader-demo/final.gd" type="Script" id=21]

[sub_resource type="ShaderMaterial" id=1]
shader = ExtResource( 20 )
shader_param/albedo_color = Color( 1, 1, 1, 1 )
shader_param/albedo = ExtResource( 10 )

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 19 )
shader_param/shade_threshold = 0.0
shader_param/use_specular = true
shader_param/specular_threshold = 0.5
shader_param/specular_glossiness = 15.0
shader_param/use_rim = true
shader_param/rim_amount = 0.8
shader_param/rim_threshold = 0.2

[sub_resource type="ShaderMaterial" id=3]
shader = ExtResource( 20 )
shader_param/albedo_color = Color( 1, 1, 1, 1 )
shader_param/albedo = ExtResource( 10 )

[sub_resource type="ShaderMaterial" id=4]
shader = ExtResource( 19 )
shader_param/shade_threshold = 0.0
shader_param/use_specular = false
shader_param/specular_threshold = 1.0
shader_param/specular_glossiness = 15.0
shader_param/use_rim = false
shader_param/rim_amount = 1.0
shader_param/rim_threshold = 0.2

[sub_resource type="SphereMesh" id=5]

[sub_resource type="ShaderMaterial" id=6]
shader = ExtResource( 20 )
shader_param/albedo_color = Color( 0.333333, 0.333333, 0.333333, 1 )
shader_param/albedo = ExtResource( 10 )

[sub_resource type="ShaderMaterial" id=7]
shader = ExtResource( 19 )
shader_param/shade_threshold = 0.0
shader_param/use_specular = true
shader_param/specular_threshold = 0.5
shader_param/specular_glossiness = 15.0
shader_param/use_rim = true
shader_param/rim_amount = 0.75
shader_param/rim_threshold = 0.2

[sub_resource type="ShaderMaterial" id=8]
shader = ExtResource( 20 )
shader_param/albedo_color = Color( 1, 1, 1, 1 )
shader_param/albedo = ExtResource( 10 )

[sub_resource type="ShaderMaterial" id=9]
shader = ExtResource( 19 )
shader_param/shade_threshold = 0.0
shader_param/use_specular = true
shader_param/specular_threshold = 0.5
shader_param/specular_glossiness = 15.0
shader_param/use_rim = true
shader_param/rim_amount = 0.7
shader_param/rim_threshold = 0.2

[sub_resource type="ShaderMaterial" id=10]
shader = ExtResource( 20 )
shader_param/albedo_color = Color( 1, 1, 1, 1 )
shader_param/albedo = ExtResource( 10 )

[sub_resource type="ShaderMaterial" id=11]
shader = ExtResource( 19 )
shader_param/shade_threshold = 0.0
shader_param/use_specular = true
shader_param/specular_threshold = 0.5
shader_param/specular_glossiness = 15.0
shader_param/use_rim = true
shader_param/rim_amount = 0.7
shader_param/rim_threshold = 0.2

[sub_resource type="ShaderMaterial" id=12]
shader = ExtResource( 20 )
shader_param/albedo_color = Color( 1, 1, 1, 1 )
shader_param/albedo = ExtResource( 10 )

[sub_resource type="ShaderMaterial" id=13]
shader = ExtResource( 19 )
shader_param/shade_threshold = 0.0
shader_param/use_specular = true
shader_param/specular_threshold = 0.5
shader_param/specular_glossiness = 15.0
shader_param/use_rim = true
shader_param/rim_amount = 0.7
shader_param/rim_threshold = 0.2

[sub_resource type="ShaderMaterial" id=14]
shader = ExtResource( 20 )
shader_param/albedo_color = Color( 0, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=15]
shader = ExtResource( 20 )
shader_param/albedo_color = Color( 1, 1, 1, 1 )
shader_param/albedo = ExtResource( 10 )

[sub_resource type="ShaderMaterial" id=16]
shader = ExtResource( 19 )
shader_param/shade_threshold = 0.0
shader_param/use_specular = false
shader_param/specular_threshold = 1.0
shader_param/specular_glossiness = 15.0
shader_param/use_rim = true
shader_param/rim_amount = 0.7
shader_param/rim_threshold = 0.2

[sub_resource type="ShaderMaterial" id=17]
shader = ExtResource( 20 )
shader_param/albedo_color = Color( 1, 1, 1, 1 )
shader_param/albedo = ExtResource( 10 )

[sub_resource type="ShaderMaterial" id=18]
shader = ExtResource( 19 )
shader_param/shade_threshold = 0.0
shader_param/use_specular = false
shader_param/specular_threshold = 1.0
shader_param/specular_glossiness = 15.0
shader_param/use_rim = true
shader_param/rim_amount = 0.7
shader_param/rim_threshold = 0.2

[sub_resource type="ParticlesMaterial" id=19]
spread = 180.0
gravity = Vector3( 0, 5, 0 )
initial_velocity = 2.0
initial_velocity_random = 1.0

[sub_resource type="ShaderMaterial" id=20]
shader = ExtResource( 20 )
shader_param/albedo_color = Color( 0.333333, 0.333333, 1, 1 )

[sub_resource type="SphereMesh" id=21]
material = SubResource( 20 )
radius = 0.25
height = 0.5

[sub_resource type="QuadMesh" id=22]
size = Vector2( 2, 2 )

[sub_resource type="QuadMesh" id=23]
size = Vector2( 2, 2 )

[sub_resource type="Environment" id=24]
background_mode = 1
background_color = Color( 1, 0, 0, 1 )

[sub_resource type="Shader" id=25]
code = "shader_type canvas_item;

void fragment() {
	vec2 coords = floor(UV/SCREEN_PIXEL_SIZE);
	float alpha = step(mod(coords.x + floor(coords.y*0.0), 4), 0);
	COLOR = vec4(0.0, 0.0, 0.0, alpha);
}"

[sub_resource type="ShaderMaterial" id=26]
shader = SubResource( 25 )

[sub_resource type="ViewportTexture" id=27]
viewport_path = NodePath("FinalViewport/Viewport/Distances")

[sub_resource type="ViewportTexture" id=28]
viewport_path = NodePath("FinalViewport/Viewport/ForceOutline")

[sub_resource type="ViewportTexture" id=29]
viewport_path = NodePath("FinalViewport/Viewport/Normals")

[sub_resource type="ViewportTexture" id=30]
viewport_path = NodePath("FinalViewport/Viewport/Views")

[sub_resource type="ShaderMaterial" id=31]
resource_local_to_scene = true
shader = ExtResource( 18 )
shader_param/outline_color = Color( 0, 0, 0, 1 )
shader_param/outline_thickness = 1
shader_param/distance_sensitivity = 9.0
shader_param/normals_sensitivity = 1024.0
shader_param/forced_sensitivity = 1.0
shader_param/distances = SubResource( 27 )
shader_param/normals = SubResource( 29 )
shader_param/views = SubResource( 30 )
shader_param/forced = SubResource( 28 )

[sub_resource type="Shader" id=32]
code = "shader_type canvas_item;

uniform sampler2D base_pass;

void fragment() {
	COLOR = texture(base_pass, SCREEN_UV);
}

"

[sub_resource type="ViewportTexture" id=33]
viewport_path = NodePath("FinalViewport/Viewport/Base")

[sub_resource type="ShaderMaterial" id=34]
resource_local_to_scene = true
shader = SubResource( 32 )
shader_param/base_pass = SubResource( 33 )

[sub_resource type="Shader" id=35]
code = "// Shading Composition, Deferred Toon Shader
//
// This shader reads from the lighting viewport and renders shading
// using alpha values to mix the colors.
shader_type canvas_item;



// The lighting pass viewport.
uniform sampler2D lighting;

// Thresholds for visibility levels. Darkness (< darkness_threshold - 0.1) is
// pitch black, bright light (> bright_threshold + 0.1) is albedo. The values in
// between are ambient light. The thresholds represent when it starts to go from
// ambient light color to the other light level color.
uniform float darkness_threshold: hint_range(0.0, 1.0, 0.001) = 0.0;
uniform float bright_threshold: hint_range(0.0, 1.0, 0.001) = 0.0;

// The actual levels of darkness, ambient light and bright light.
uniform vec4 darkness_shade: hint_color = vec4(0.0, 0.0, 0.0, 0.9);
uniform vec4 ambient_light_shade: hint_color = vec4(0.0, 0.0, 0.0, 0.4);
uniform vec4 bright_light_shade: hint_color = vec4(0.0, 0.0, 0.0, 0.0);




void fragment() {
	float light = texture(lighting, SCREEN_UV).r;
	
	// Renders the light shade.
	float is_dim = smoothstep(darkness_threshold - 0.1, darkness_threshold, light);
	float is_bright = smoothstep(bright_threshold, bright_threshold + 0.1, light);
	COLOR = darkness_shade; // Starts dark
	COLOR += (ambient_light_shade - COLOR)*is_dim; // Goes to ambient light only
	COLOR += (bright_light_shade - COLOR)*is_bright; // Goes to bright light
}
"

[sub_resource type="ViewportTexture" id=36]
viewport_path = NodePath("FinalViewport/Viewport/Lighting")

[sub_resource type="ShaderMaterial" id=37]
resource_local_to_scene = true
shader = SubResource( 35 )
shader_param/darkness_threshold = 0.0
shader_param/bright_threshold = 0.0
shader_param/darkness_shade = Color( 0, 0, 0, 0.901961 )
shader_param/ambient_light_shade = Color( 0, 0, 0, 0.501961 )
shader_param/bright_light_shade = Color( 0, 0, 0, 0 )
shader_param/lighting = SubResource( 36 )

[sub_resource type="Shader" id=38]
code = "// Specular and Rim Composition, Deferred Toon Shader
//
// It's easier to separete those from the shading pass due to
// how interpolating colors work. The shade tones are mostly black or
// dark, while specular and rim are very bright. This causes the
// transition from one zone to the other to get weird tones.
shader_type canvas_item;



// Lighting viewport, the same from the shading pass.
uniform sampler2D lighting;

// Bright light threshold from the shading pass.
uniform float bright_threshold: hint_range(0.0, 1.0, 0.001) = 0.0;

// Tones for specular reflection and rim lighting.
uniform vec4 specular_tone: hint_color = vec4(1.0, 1.0, 1.0, 0.5);
uniform vec4 rim_tone: hint_color = vec4(1.0, 1.0, 1.0, 0.5);



void fragment() {
	COLOR = vec4(1.0, 1.0, 1.0, 0.0);
	float specular = smoothstep(0.0, 0.1, texture(lighting, SCREEN_UV).g);
	float rim = smoothstep(0.0, 0.1, texture(lighting, SCREEN_UV).b);
	
	// Checks if we're not on a shade zone to stop rim and specular from rendering.
	float is_bright = smoothstep(bright_threshold, bright_threshold + 0.1, texture(lighting, SCREEN_UV).r);
	
	// Renders specular reflection.
	COLOR += (specular_tone - COLOR)*specular*is_bright;
	
	// Renders rim lighting.
	COLOR += (rim_tone - COLOR)*rim*is_bright;
}


"

[sub_resource type="ViewportTexture" id=39]
viewport_path = NodePath("FinalViewport/Viewport/Lighting")

[sub_resource type="ShaderMaterial" id=40]
resource_local_to_scene = true
shader = SubResource( 38 )
shader_param/bright_threshold = 0.0
shader_param/specular_tone = Color( 1, 1, 1, 0.5 )
shader_param/rim_tone = Color( 1, 1, 1, 0.5 )
shader_param/lighting = SubResource( 39 )

[sub_resource type="Shader" id=41]
code = "// Shade Pattern Pass, Deferred Toon Shader
//
// Detects shade zones and renders a pattern on top of them in the same manner
// of the shading composition does, by using alpha values.
shader_type canvas_item;



// The same values as the ones with the same name on the shading composition.
uniform sampler2D lighting;
uniform float bright_threshold: hint_range(0.0, 1.0, 0.001) = 0.0;

// The pattern to draw from.
uniform sampler2D pattern;



void fragment() {
	COLOR = texture(pattern, SCREEN_UV);
	COLOR.a *= 1.0 - smoothstep(bright_threshold, bright_threshold + 0.1, texture(lighting, SCREEN_UV).r);
}


"

[sub_resource type="ViewportTexture" id=42]
viewport_path = NodePath("FinalViewport/Viewport/Lighting")

[sub_resource type="ViewportTexture" id=43]
viewport_path = NodePath("FinalViewport/Viewport/ShadePattern")

[sub_resource type="ShaderMaterial" id=44]
resource_local_to_scene = true
shader = SubResource( 41 )
shader_param/bright_threshold = 0.0
shader_param/lighting = SubResource( 42 )
shader_param/pattern = SubResource( 43 )

[sub_resource type="ViewportTexture" id=45]
viewport_path = NodePath("FinalViewport/Viewport/OutlinesTexture")

[sub_resource type="ViewportTexture" id=46]
viewport_path = NodePath("FinalViewport/Viewport")

[sub_resource type="ViewportTexture" id=47]
viewport_path = NodePath("FinalViewport")

[node name="ViewportContainer" type="ViewportContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
stretch = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="FinalViewport" type="Viewport" parent="."]
size = Vector2( 1024, 576 )
handle_input_locally = false
usage = 0
render_target_update_mode = 3
script = ExtResource( 21 )
viewport = NodePath("Viewport")

[node name="Viewport" type="Viewport" parent="FinalViewport"]
size = Vector2( 1024, 576 )
handle_input_locally = false
usage = 0
render_target_update_mode = 3
script = ExtResource( 2 )
viewports = [ NodePath("Base"), NodePath("Distances"), NodePath("Normals"), NodePath("Views"), NodePath("Lighting"), NodePath("ForceOutline"), NodePath("ShadePattern"), NodePath("OutlinesTexture") ]

[node name="Base" type="Viewport" parent="FinalViewport/Viewport"]
size = Vector2( 1024, 576 )
handle_input_locally = false
render_target_update_mode = 3

[node name="DirectionalLight" type="DirectionalLight" parent="FinalViewport/Viewport/Base"]
transform = Transform( 0.965926, -0.12941, 0.224144, 0, 0.866025, 0.5, -0.258819, -0.482963, 0.836516, 0, 0, 6 )
light_cull_mask = 4293926913
shadow_enabled = true

[node name="Player" parent="FinalViewport/Viewport/Base" instance=ExtResource( 7 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 3 )

[node name="RedBlueCube" type="MeshInstance" parent="FinalViewport/Viewport/Base"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, -1 )
layers = 8193
mesh = ExtResource( 6 )
material/0 = SubResource( 1 )
script = ExtResource( 12 )

[node name="Normals" type="MeshInstance" parent="FinalViewport/Viewport/Base/RedBlueCube"]
layers = 1024
cast_shadow = 0
mesh = ExtResource( 6 )
material/0 = ExtResource( 17 )

[node name="Lighting" type="MeshInstance" parent="FinalViewport/Viewport/Base/RedBlueCube"]
layers = 16384
cast_shadow = 0
mesh = ExtResource( 6 )
material/0 = SubResource( 2 )

[node name="Ground" type="MeshInstance" parent="FinalViewport/Viewport/Base"]
layers = 8193
mesh = ExtResource( 9 )
material/0 = SubResource( 3 )

[node name="Normals" type="MeshInstance" parent="FinalViewport/Viewport/Base/Ground"]
layers = 1024
cast_shadow = 0
mesh = ExtResource( 9 )
material/0 = ExtResource( 17 )

[node name="Lighting" type="MeshInstance" parent="FinalViewport/Viewport/Base/Ground"]
layers = 16384
cast_shadow = 0
mesh = ExtResource( 9 )
material/0 = SubResource( 4 )

[node name="Sphere" type="MeshInstance" parent="FinalViewport/Viewport/Base"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.05954, 2.16381, 0.995895 )
layers = 8193
mesh = SubResource( 5 )
material/0 = SubResource( 6 )
script = ExtResource( 1 )

[node name="Timer" type="Timer" parent="FinalViewport/Viewport/Base/Sphere"]
wait_time = 2.0
one_shot = true
autostart = true

[node name="Normals" type="MeshInstance" parent="FinalViewport/Viewport/Base/Sphere"]
layers = 1024
cast_shadow = 0
mesh = SubResource( 5 )
material/0 = ExtResource( 17 )

[node name="Lighting" type="MeshInstance" parent="FinalViewport/Viewport/Base/Sphere"]
layers = 16384
cast_shadow = 0
mesh = SubResource( 5 )
material/0 = SubResource( 7 )

[node name="Cone" type="MeshInstance" parent="FinalViewport/Viewport/Base"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.92434, 2.03448, -1.72205 )
layers = 8193
mesh = ExtResource( 4 )
material/0 = SubResource( 8 )

[node name="Normals" type="MeshInstance" parent="FinalViewport/Viewport/Base/Cone"]
layers = 2147484672
cast_shadow = 0
mesh = ExtResource( 4 )
material/0 = ExtResource( 17 )

[node name="Lighting" type="MeshInstance" parent="FinalViewport/Viewport/Base/Cone"]
layers = 2147500032
cast_shadow = 0
mesh = ExtResource( 4 )
material/0 = SubResource( 9 )

[node name="Cylinder" type="MeshInstance" parent="FinalViewport/Viewport/Base"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.37365, 1.61603, 1.36919 )
layers = 8193
mesh = ExtResource( 3 )
material/0 = SubResource( 10 )

[node name="Normals" type="MeshInstance" parent="FinalViewport/Viewport/Base/Cylinder"]
layers = 1024
cast_shadow = 0
mesh = ExtResource( 3 )
material/0 = ExtResource( 17 )

[node name="Lighting" type="MeshInstance" parent="FinalViewport/Viewport/Base/Cylinder"]
layers = 16384
cast_shadow = 0
mesh = ExtResource( 3 )
material/0 = SubResource( 11 )

[node name="Torus" type="MeshInstance" parent="FinalViewport/Viewport/Base"]
transform = Transform( 2, 0, 0, 0, 2, 0, 0, 0, 2, -5.43669, 1.52002, 4.89599 )
mesh = ExtResource( 8 )
material/0 = SubResource( 12 )

[node name="Normals" type="MeshInstance" parent="FinalViewport/Viewport/Base/Torus"]
layers = 1024
cast_shadow = 0
mesh = ExtResource( 8 )
material/0 = ExtResource( 17 )

[node name="Lighting" type="MeshInstance" parent="FinalViewport/Viewport/Base/Torus"]
layers = 16384
cast_shadow = 0
mesh = ExtResource( 8 )
material/0 = SubResource( 13 )

[node name="Forced" type="MeshInstance" parent="FinalViewport/Viewport/Base/Torus"]
layers = 8192
cast_shadow = 0
mesh = ExtResource( 8 )
material/0 = SubResource( 14 )

[node name="Tree" type="MeshInstance" parent="FinalViewport/Viewport/Base"]
transform = Transform( 0.4, 0, 0, 0, 0.4, 0, 0, 0, 0.4, -6, 0.1, -3 )
layers = 8193
mesh = ExtResource( 13 )
material/0 = SubResource( 15 )

[node name="Normals" type="MeshInstance" parent="FinalViewport/Viewport/Base/Tree"]
layers = 1024
cast_shadow = 0
mesh = ExtResource( 13 )
material/0 = ExtResource( 17 )

[node name="Lighting" type="MeshInstance" parent="FinalViewport/Viewport/Base/Tree"]
layers = 16384
cast_shadow = 0
mesh = ExtResource( 13 )
material/0 = SubResource( 16 )

[node name="Leaves" type="MeshInstance" parent="FinalViewport/Viewport/Base/Tree"]
transform = Transform( 2.5, 0, 0, 0, 2.5, 0, 0, 0, 2.5, 0, 5.8, 0 )
layers = 8193
mesh = ExtResource( 5 )
material/0 = SubResource( 17 )

[node name="Normals" type="MeshInstance" parent="FinalViewport/Viewport/Base/Tree/Leaves"]
layers = 1024
cast_shadow = 0
mesh = ExtResource( 5 )
material/0 = ExtResource( 17 )

[node name="Lighting" type="MeshInstance" parent="FinalViewport/Viewport/Base/Tree/Leaves"]
layers = 2147500032
cast_shadow = 0
mesh = ExtResource( 5 )
material/0 = SubResource( 18 )

[node name="Particles" type="Particles" parent="FinalViewport/Viewport/Base"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 3, 1, 3 )
visible = false
layers = 8193
cast_shadow = 0
local_coords = false
process_material = SubResource( 19 )
draw_pass_1 = SubResource( 21 )

[node name="Distances" type="Viewport" parent="FinalViewport/Viewport"]
size = Vector2( 1024, 576 )
handle_input_locally = false
keep_3d_linear = true
render_target_update_mode = 3

[node name="Camera" type="Camera" parent="FinalViewport/Viewport/Distances"]
cull_mask = 3072

[node name="QuadMesh" type="MeshInstance" parent="FinalViewport/Viewport/Distances/Camera"]
visible = false
layers = 2048
cast_shadow = 0
extra_cull_margin = 16384.0
mesh = SubResource( 22 )
material/0 = ExtResource( 11 )

[node name="Normals" type="Viewport" parent="FinalViewport/Viewport"]
size = Vector2( 1024, 576 )
handle_input_locally = false
keep_3d_linear = true
render_target_update_mode = 3

[node name="Camera" type="Camera" parent="FinalViewport/Viewport/Normals"]
cull_mask = 1024

[node name="Views" type="Viewport" parent="FinalViewport/Viewport"]
size = Vector2( 1024, 576 )
handle_input_locally = false
keep_3d_linear = true
render_target_update_mode = 3

[node name="Camera" type="Camera" parent="FinalViewport/Viewport/Views"]
cull_mask = 4096

[node name="QuadMesh" type="MeshInstance" parent="FinalViewport/Viewport/Views/Camera"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -1 )
visible = false
layers = 4096
cast_shadow = 0
mesh = SubResource( 23 )
material/0 = ExtResource( 14 )

[node name="Lighting" type="Viewport" parent="FinalViewport/Viewport"]
size = Vector2( 1024, 576 )
handle_input_locally = false
keep_3d_linear = true
render_target_update_mode = 3
shadow_atlas_size = 4096

[node name="Camera" type="Camera" parent="FinalViewport/Viewport/Lighting"]
cull_mask = 16384
environment = SubResource( 24 )

[node name="ForceOutline" type="Viewport" parent="FinalViewport/Viewport"]
size = Vector2( 1024, 576 )
handle_input_locally = false
keep_3d_linear = true
render_target_update_mode = 3

[node name="Camera" type="Camera" parent="FinalViewport/Viewport/ForceOutline"]
cull_mask = 8192
current = true

[node name="ShadePattern" type="Viewport" parent="FinalViewport/Viewport"]
size = Vector2( 1024, 576 )
transparent_bg = true
handle_input_locally = false
keep_3d_linear = true
usage = 0
render_target_update_mode = 3

[node name="Pattern" type="TextureRect" parent="FinalViewport/Viewport/ShadePattern"]
material = SubResource( 26 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 15 )
expand = true

[node name="OutlinesTexture" type="Viewport" parent="FinalViewport/Viewport"]
size = Vector2( 1024, 576 )
transparent_bg = true
handle_input_locally = false
keep_3d_linear = true
usage = 0
render_target_update_mode = 3

[node name="Outlines" type="TextureRect" parent="FinalViewport/Viewport/OutlinesTexture"]
material = SubResource( 31 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 15 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BasePass" type="TextureRect" parent="FinalViewport/Viewport"]
material = SubResource( 34 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 15 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="White" type="ColorRect" parent="FinalViewport/Viewport"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ShadingPass" type="TextureRect" parent="FinalViewport/Viewport"]
material = SubResource( 37 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 15 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SpecAndRimPass" type="TextureRect" parent="FinalViewport/Viewport"]
material = SubResource( 40 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 15 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ShadePatternPass" type="TextureRect" parent="FinalViewport/Viewport"]
visible = false
material = SubResource( 44 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 15 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Outlines" type="TextureRect" parent="FinalViewport/Viewport"]
margin_right = 40.0
margin_bottom = 40.0
texture = SubResource( 45 )
flip_v = true

[node name="Render" type="TextureRect" parent="FinalViewport"]
margin_right = 40.0
margin_bottom = 40.0
texture = SubResource( 46 )
flip_v = true

[node name="FinalComposition" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 47 )
flip_v = true
script = ExtResource( 16 )
__meta__ = {
"_edit_use_anchors_": false
}
sec_pass_camera = [ NodePath("../FinalViewport/Viewport/Distances/Camera"), NodePath("../FinalViewport/Viewport/Normals/Camera"), NodePath("../FinalViewport/Viewport/Views/Camera"), NodePath("../FinalViewport/Viewport/Lighting/Camera"), NodePath("../FinalViewport/Viewport/ForceOutline/Camera") ]
make_visible = [ NodePath("../FinalViewport/Viewport/Distances/Camera/QuadMesh"), NodePath("../FinalViewport/Viewport/Views/Camera/QuadMesh") ]
[connection signal="size_changed" from="FinalViewport" to="FinalViewport" method="_on_FinalViewport_size_changed"]
[connection signal="size_changed" from="FinalViewport/Viewport" to="FinalViewport/Viewport" method="_on_Viewport_size_changed"]
[connection signal="timeout" from="FinalViewport/Viewport/Base/Sphere/Timer" to="FinalViewport/Viewport/Base/Sphere" method="_on_Timer_timeout"]

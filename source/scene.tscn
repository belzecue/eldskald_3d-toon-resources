[gd_scene load_steps=50 format=2]

[ext_resource path="res://player.gd" type="Script" id=1]
[ext_resource path="res://assets/models/palm-trees/coconut/toon-coconut.tscn" type="PackedScene" id=2]
[ext_resource path="res://assets/shader-materials/toon-transp-outline.tres" type="Material" id=3]
[ext_resource path="res://assets/flames/smoke.tscn" type="PackedScene" id=4]
[ext_resource path="res://assets/flames/FireMask.png" type="Texture" id=6]
[ext_resource path="res://assets/flames/HoleNoise.png" type="Texture" id=7]
[ext_resource path="res://assets/flames/toon-flames.tscn" type="PackedScene" id=8]
[ext_resource path="res://assets/models/palm-trees/palm-3/toon-palm-tree.tscn" type="PackedScene" id=9]
[ext_resource path="res://assets/models/food/skewered-fish/toon-skewered-fish.tscn" type="PackedScene" id=10]
[ext_resource path="res://assets/models/logs/toon-log-1.tscn" type="PackedScene" id=11]
[ext_resource path="res://assets/models/tools/bottles/toon-bottle-2.tscn" type="PackedScene" id=12]
[ext_resource path="res://assets/models/palm-trees/palm-1/toon-palm-tree.tscn" type="PackedScene" id=13]
[ext_resource path="res://assets/models/tools/axe/toon-axe.tscn" type="PackedScene" id=14]
[ext_resource path="res://assets/models/palm-trees/palm-2/toon-palm-tree.tscn" type="PackedScene" id=15]
[ext_resource path="res://assets/models/logs/toon-log-2.tscn" type="PackedScene" id=16]
[ext_resource path="res://assets/models/campfire/toon-campfire.tscn" type="PackedScene" id=17]
[ext_resource path="res://assets/models/tools/bottles/toon-bottle-1.tscn" type="PackedScene" id=18]
[ext_resource path="res://assets/models/tools/bottles/toon-bottle-3.tscn" type="PackedScene" id=19]
[ext_resource path="res://assets/models/stones/large-rocks/toon-boulder-2.tscn" type="PackedScene" id=20]
[ext_resource path="res://assets/models/stones/large-rocks/toon-boulder-1.tscn" type="PackedScene" id=21]
[ext_resource path="res://assets/models/stones/small-rocks/toon-rock-1.tscn" type="PackedScene" id=22]
[ext_resource path="res://assets/models/stones/small-rocks/toon-rock-3.tscn" type="PackedScene" id=23]
[ext_resource path="res://assets/models/stones/large-rocks/toon-boulder-3.tscn" type="PackedScene" id=24]
[ext_resource path="res://assets/models/stones/small-rocks/toon-rock-2.tscn" type="PackedScene" id=25]
[ext_resource path="res://assets/models/grounds/little-isle.obj" type="ArrayMesh" id=26]
[ext_resource path="res://assets/shader-materials/toon-outline.tres" type="Material" id=27]
[ext_resource path="res://assets/water/sea-material.tres" type="Material" id=28]
[ext_resource path="res://assets/models/grounds/100grid.obj" type="ArrayMesh" id=30]

[sub_resource type="ProceduralSky" id=1]
sky_top_color = Color( 0.0745098, 0.0901961, 0.117647, 1 )
sky_horizon_color = Color( 0.352941, 0.45098, 0.52549, 1 )
ground_bottom_color = Color( 0.0745098, 0.0901961, 0.117647, 1 )
ground_horizon_color = Color( 0.352941, 0.45098, 0.52549, 1 )
sun_color = Color( 0.776471, 0.862745, 0.964706, 1 )
sun_latitude = 30.0
sun_longitude = -180.0
sun_curve = 0.000612955
sun_energy = 2.0

[sub_resource type="Environment" id=2]
resource_local_to_scene = true
background_mode = 2
background_sky = SubResource( 1 )
background_color = Color( 0.0745098, 0.0901961, 0.117647, 1 )
background_canvas_max_layer = 1
ambient_light_color = Color( 0.333333, 0.439216, 0.466667, 1 )
ambient_light_energy = 0.25
ambient_light_sky_contribution = 0.0
fog_enabled = true
fog_color = Color( 0.0745098, 0.0901961, 0.117647, 1 )
fog_sun_color = Color( 0.564706, 0.729412, 0.92549, 1 )
fog_sun_amount = 0.13
fog_depth_begin = 0.0
fog_depth_end = 1024.7
fog_depth_curve = 0.615572
fog_height_min = 148.2
fog_height_max = -171.5
tonemap_mode = 2
glow_enabled = true
glow_intensity = 1.86
glow_strength = 0.87
glow_bloom = 0.02
glow_blend_mode = 1
glow_hdr_threshold = 0.44
glow_bicubic_upscale = true

[sub_resource type="Shader" id=3]
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D texture_albedo : hint_albedo;
uniform float grow;
uniform float outline_width;
uniform vec4 outline_color: hint_color;

varying vec2 width;



void vertex() {
	// Billboard mode, directly unmodified from spatial to shader conversion.
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat4(CAMERA_MATRIX[0],WORLD_MATRIX[1],vec4(normalize(cross(CAMERA_MATRIX[0].xyz,WORLD_MATRIX[1].xyz)), 0.0),WORLD_MATRIX[3]);
	MODELVIEW_MATRIX = MODELVIEW_MATRIX * mat4(vec4(1.0, 0.0, 0.0, 0.0),vec4(0.0, 1.0/length(WORLD_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0),vec4(0.0, 0.0, 0.0 ,1.0));
	
	// Grow code from spatial to shader conversion, but instead of growing in the normal
	// direction, it moves towards the camera so when viewed from corners when close, it
	// doesn't look displaced to the side away from the camera.
	vec4 view_position = MODELVIEW_MATRIX * vec4(VERTEX, 1.0);
	VERTEX -= normalize(view_position.xyz) * grow;
	
	// Calculates outline width based off of view distance.
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	width = 1.0/VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
}



void fragment() {
	vec2 left_up = vec2(-1.0, -1.0)*width;
	vec2 right_up = vec2(1.0, -1.0)*width;
	vec2 right_down = vec2(1.0, 1.0)*width;
	vec2 left_down = vec2(-1.0, 1.0)*width;
	
	vec3 color = texture(texture_albedo, UV).rgb;
	float alpha = texture(texture_albedo, UV).a;
	
	// Checks if the current pixel is in the border and outlines it.
	if (alpha > 0.0) {
		float lu_a = texture(texture_albedo, UV + left_up).a == 0.0 ? 1.0 : 0.0;
		float ru_a = texture(texture_albedo, UV + right_up).a == 0.0 ? 1.0 : 0.0;
		float rd_a = texture(texture_albedo, UV + right_down).a == 0.0 ? 1.0 : 0.0;
		float ld_a = texture(texture_albedo, UV + left_down).a == 0.0 ? 1.0 : 0.0;
		
		float is_border = lu_a + ru_a + rd_a + ld_a > 0.0 ? 1.0 : 0.0;
		color += (outline_color.rgb - color) * is_border;
	}
	
	ALBEDO = color;
	ALPHA = alpha;
}


"

[sub_resource type="ViewportTexture" id=4]
viewport_path = NodePath("Campfire/Flames/Viewport")

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/grow = 0.3
shader_param/outline_width = 1.0
shader_param/outline_color = Color( 0, 0, 0, 1 )
shader_param/texture_albedo = SubResource( 4 )

[sub_resource type="QuadMesh" id=6]
resource_local_to_scene = true
material = SubResource( 5 )
size = Vector2( 1.5, 1.5 )

[sub_resource type="Shader" id=7]
code = "// This shader is based on Minionsart's stylized fire
// https://twitter.com/minionsart/status/1132593681452683264?s=20

shader_type spatial;
render_mode blend_mix;

// This texture must be seamless!
// Experiment with the different noises provided in the res://Demos/StylizedFire/ folder
uniform sampler2D noise_texture;

uniform sampler2D texture_mask;
uniform float emission_intensity = 2.0;
uniform float time_scale = 3.0;
uniform vec2 texture_scale = vec2(1.0);
uniform float edge_softness = 0.1;

varying vec3 world_coord;
varying float world_x_dot;


void vertex() {
	// Billboard code, taken directly from a spatial material
	// create a spatial material, enable billboard with billboard keep scale, and then convert
	// to shader material, and it will create a shader with this code.
	mat4 mat_world = mat4(normalize(CAMERA_MATRIX[0])*length(WORLD_MATRIX[0]),normalize(CAMERA_MATRIX[1])*length(WORLD_MATRIX[0]),normalize(CAMERA_MATRIX[2])*length(WORLD_MATRIX[2]),WORLD_MATRIX[3]);
	mat_world = mat_world * mat4( vec4(cos(INSTANCE_CUSTOM.x),-sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0),vec4(0.0, 0.0, 1.0, 0.0),vec4(0.0, 0.0, 0.0, 1.0));
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat_world;
	
	// We map the coordinates on the vertical planes xy and zy
	// we also calculate how to blend between the two based on where the world space normal
	// is pointing.
	world_coord = (mat_world * vec4(VERTEX, 1.0)).rgb;
	vec4 world_normal = (mat_world * vec4(NORMAL, 0.0));
	world_x_dot =  abs(dot(normalize(world_normal.rgb), vec3(1.0,0.0,0.0)));
}


void fragment() {
	
	// We sample the mask texture based on regular UV
	// We don't want the particles to show their square shape
	// so we use a round, black and white, mask texture
	float mask = texture(texture_mask, UV).r;
	
	// We sample the noise both from the xy plane and from the zy plane, adding a time-based
	// panning. If we didn't do this, we would see the holes of the noise will always be in the
	// same space in global coordinates. Set the time_scale to zero to see how it would look like.
	// To add more variation, we could sample from another noise that has a different scale and panning speed.
	// The additional offset on the zy noise is to avoid mirroring effects when
	// the view vector is between same-sign x and z axes
	vec2 time_based_pan = vec2(0.2, 1.0) * (- TIME * time_scale);
	float noise_xy = texture(noise_texture, world_coord.xy * texture_scale + time_based_pan).r;
	float noise_zy = texture(noise_texture, world_coord.zy * texture_scale + time_based_pan + vec2(0.7, 0.3)).r;
	
	// We blend the noise based on world_x_dot, which is the dot product between
	// the normal of the billboard plane, and the global x axis. If we face the global
	// x axis, then we sample from the xy plane, otherwise, we sample from the zy plane
	float noise = mix(noise_xy, noise_zy, clamp(world_x_dot, 0.0, 1.0));
	
	// The particle color is assigned to the vertex color, which is called COLOR
	ALBEDO = COLOR.rgb;
	// Assign the same color for emission, multiplied by the emission intensity
	EMISSION = ALBEDO * emission_intensity;
	
	// Instead of blending out the particle, we apply a technique called alpha erosion, where we
	// subtract an erosion amount from the alpha.
	float erosion_amount = (1.0 - COLOR.a);
	float alpha = (noise * mask) - erosion_amount;
	
	// Because we perform a subtraction, we ensure that the alpha is always between 0 and 1.
	// If the alpha goes negative or above 1, a number of visual artifacts appear.
	alpha = clamp(alpha, 0.0, 1.0);
	
	// In order to give this fire a stylized vibe, we use smoothstep to remap the alpha value
	// We could use step(0.1, alpha), but then there would be an abrupt cut between transparent and
	// non transparent (exactly as if we discarded the fragment with discard)
	// smoothstep gives a nice blend on the edges instead.
	ALPHA = smoothstep(0.0, edge_softness, alpha);
}


"

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = SubResource( 7 )
shader_param/emission_intensity = 2.0
shader_param/time_scale = 3.0
shader_param/texture_scale = Vector2( 1, 1 )
shader_param/edge_softness = 0.0
shader_param/noise_texture = ExtResource( 7 )
shader_param/texture_mask = ExtResource( 6 )

[sub_resource type="Gradient" id=9]
resource_local_to_scene = true
offsets = PoolRealArray( 0, 0.342857, 1 )
colors = PoolColorArray( 1, 0.984375, 0, 1, 0.854902, 0.160784, 0, 0.8, 1, 0, 0, 0 )

[sub_resource type="GradientTexture" id=10]
resource_local_to_scene = true
gradient = SubResource( 9 )
width = 128

[sub_resource type="Curve" id=11]
resource_local_to_scene = true
_data = [ Vector2( 0, 0 ), 0.0, 3.38807, 0, 0, Vector2( 0.597015, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 1 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=12]
resource_local_to_scene = true
width = 128
curve = SubResource( 11 )

[sub_resource type="ParticlesMaterial" id=13]
resource_local_to_scene = true
lifetime_randomness = 0.81
emission_shape = 2
emission_box_extents = Vector3( 0.4, 0.2, 0 )
direction = Vector3( 0, 1, 0 )
spread = 0.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 0.5
linear_accel = 4.0
scale = 2.0
scale_random = 1.0
scale_curve = SubResource( 12 )
color_ramp = SubResource( 10 )

[sub_resource type="SpatialMaterial" id=14]
resource_local_to_scene = true
next_pass = ExtResource( 3 )
params_diffuse_mode = 4
params_specular_mode = 3
albedo_color = Color( 0.670588, 0.423529, 0.156863, 0.392157 )
metallic = 0.5
roughness = 0.03
refraction_enabled = true
refraction_scale = 0.02
refraction_texture_channel = 0

[sub_resource type="SpatialMaterial" id=15]
resource_local_to_scene = true
next_pass = ExtResource( 3 )
params_diffuse_mode = 4
params_specular_mode = 3
albedo_color = Color( 0.670588, 0.423529, 0.156863, 0.392157 )
metallic = 0.5
roughness = 0.03
refraction_enabled = true
refraction_scale = 0.02
refraction_texture_channel = 0

[sub_resource type="SpatialMaterial" id=16]
resource_local_to_scene = true
next_pass = ExtResource( 3 )
params_diffuse_mode = 4
params_specular_mode = 3
albedo_color = Color( 0.670588, 0.423529, 0.156863, 0.392157 )
metallic = 0.5
roughness = 0.03
refraction_enabled = true
refraction_scale = 0.02
refraction_texture_channel = 0

[sub_resource type="SpatialMaterial" id=17]
resource_local_to_scene = true
next_pass = ExtResource( 3 )
params_diffuse_mode = 4
params_specular_mode = 3
albedo_color = Color( 0.262745, 0.592157, 0.592157, 0.392157 )
metallic = 0.5
roughness = 0.03
refraction_enabled = true
refraction_scale = 0.02
refraction_texture_channel = 0

[sub_resource type="SpatialMaterial" id=18]
resource_local_to_scene = true
next_pass = ExtResource( 3 )
params_diffuse_mode = 4
params_specular_mode = 3
albedo_color = Color( 0.631373, 0.352941, 0.745098, 0.392157 )
metallic = 0.5
roughness = 0.03
refraction_enabled = true
refraction_scale = 0.02
refraction_texture_channel = 0

[sub_resource type="SpatialMaterial" id=19]
resource_local_to_scene = true
next_pass = ExtResource( 3 )
params_diffuse_mode = 4
params_specular_mode = 3
albedo_color = Color( 0.631373, 0.352941, 0.745098, 0.392157 )
metallic = 0.5
roughness = 0.03
refraction_enabled = true
refraction_scale = 0.02
refraction_texture_channel = 0

[sub_resource type="SpatialMaterial" id=20]
resource_local_to_scene = true
next_pass = ExtResource( 3 )
params_diffuse_mode = 4
params_specular_mode = 3
albedo_color = Color( 0.262745, 0.592157, 0.592157, 0.392157 )
metallic = 0.5
roughness = 0.03
refraction_enabled = true
refraction_scale = 0.02
refraction_texture_channel = 0

[sub_resource type="SpatialMaterial" id=21]
next_pass = ExtResource( 27 )
params_diffuse_mode = 4
params_specular_mode = 3
albedo_color = Color( 0.294118, 0.278431, 0.231373, 1 )
metallic_specular = 0.0
roughness = 0.02

[node name="Demo" type="Spatial"]

[node name="Night" type="WorldEnvironment" parent="."]
environment = SubResource( 2 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 1000, 0 )
light_color = Color( 0.776471, 0.862745, 0.964706, 1 )
light_energy = 0.25
shadow_bias = 0.0

[node name="Player" type="KinematicBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 4 )
script = ExtResource( 1 )
speed = 3.5
mouse_sensitivity = 1.0

[node name="Camera" type="Camera" parent="Player"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )

[node name="Campfire" parent="." instance=ExtResource( 17 )]

[node name="Flames" parent="Campfire" instance=ExtResource( 8 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.9, 0 )
mesh = SubResource( 6 )
material/0 = null

[node name="Camera" parent="Campfire/Flames/Viewport" index="0"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1000, 0 )

[node name="Flames" parent="Campfire/Flames/Viewport/Camera" index="0"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.1, -2 )
material_override = SubResource( 8 )
amount = 64
process_material = SubResource( 13 )

[node name="Smoke" parent="Campfire" instance=ExtResource( 4 )]

[node name="OmniLight" type="OmniLight" parent="Campfire"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )
light_color = Color( 0.984314, 0.792157, 0.137255, 1 )
light_energy = 3.0
shadow_enabled = true
shadow_bias = 0.2

[node name="Terrain" type="Spatial" parent="."]

[node name="Log" parent="Terrain" instance=ExtResource( 11 )]
transform = Transform( 1.39891, 0, -0.0552812, 0, 1.4, 0, 0.0552812, 0, 1.39891, 1.409, 0.175034, 0.245 )

[node name="Log2" parent="Terrain" instance=ExtResource( 16 )]
transform = Transform( 0.362347, 0, 1.3523, 0, 1.4, 0, -1.3523, 0, 0.362347, 0.5, 0.183743, -1.5 )

[node name="Log3" parent="Terrain" instance=ExtResource( 11 )]
transform = Transform( -0.385802, 1.05998, -0.829212, -1.31557, -0.478828, 0, -0.283608, 0.779205, 1.12801, -1.19, 0.2, -0.906 )

[node name="PalmTree" parent="Terrain" instance=ExtResource( 9 )]
transform = Transform( -0.351109, 0, -0.662738, 0, 0.75, 0, 0.662738, 0, -0.351109, -3.507, -0.085, 0.867 )

[node name="PalmTree2" parent="Terrain" instance=ExtResource( 13 )]
transform = Transform( 0.75, 0, 0, 0, 0.75, 0, 0, 0, 0.75, 2.696, 0.053, -4.457 )

[node name="PalmTree3" parent="Terrain" instance=ExtResource( 13 )]
transform = Transform( 0.21855, 0, -0.769569, 0, 0.8, 0, 0.769569, 0, 0.21855, 2.788, 0.053, 2.567 )

[node name="PalmTree4" parent="Terrain" instance=ExtResource( 15 )]
transform = Transform( 0.75, 0, 0, 0, 0.75, 0, 0, 0, 0.75, -1.487, 0.114, -4.432 )

[node name="SkeweredFish" parent="Terrain" instance=ExtResource( 10 )]
transform = Transform( 0.108449, 0.208084, 0.97208, -0.0230675, 0.978111, -0.206802, -0.993834, 3.8594e-06, 0.110875, -0.951, 0.451, 0.343 )

[node name="SkeweredFish2" parent="Terrain" instance=ExtResource( 10 )]
transform = Transform( 0.68764, 0.350756, 0.86847, -0.214995, 1.14757, -0.260893, 0.831221, 0.0066514, -0.785935, -0.836, 0.361, 0.573 )

[node name="SkeweredFish3" parent="Terrain" instance=ExtResource( 10 )]
transform = Transform( 0.322274, 0.184784, 0.941127, -0.186274, 0.876128, -0.168077, -1.14081, -0.0908559, 0.293309, -0.874, 0.414, 0.138 )

[node name="Boulder" parent="Terrain" instance=ExtResource( 21 )]
transform = Transform( -0.757143, 0, 0.653249, 0, 1, 0, -0.653249, 0, -0.757143, 0.566465, 0.0252899, -3.74667 )

[node name="Boulder2" parent="Terrain" instance=ExtResource( 24 )]
transform = Transform( 0.779546, 0, -0.626345, 0, 1, 0, 0.626345, 0, 0.779546, -3.87214, 0.00882436, -3.18381 )

[node name="Boulder3" parent="Terrain" instance=ExtResource( 20 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.44629, -0.00881804, -2.07715 )

[node name="Props" type="Spatial" parent="."]

[node name="Coconut" parent="Props" instance=ExtResource( 2 )]
transform = Transform( 0.75, 0, 0, 0, 0.75, 0, 0, 0, 0.75, 1.6854, 0.0943154, -0.98734 )

[node name="Coconut2" parent="Props" instance=ExtResource( 2 )]
transform = Transform( 0.8, 0, 0, 0, 0.8, 0, 0, 0, 0.8, 2.02082, 0.0943154, -0.914623 )

[node name="Coconut3" parent="Props" instance=ExtResource( 2 )]
transform = Transform( 0.7, 0, 0, 0, 0.7, 0, 0, 0, 0.7, 1.87077, 0.0943154, -1.2513 )

[node name="Axe" parent="Props" instance=ExtResource( 14 )]
transform = Transform( -0.499929, 0.742558, 0.445734, -0.0229024, -0.525819, 0.850288, 0.865763, 0.414876, 0.279879, -1.25865, 0.672206, -0.884021 )

[node name="Bottle" parent="Props" instance=ExtResource( 12 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.682, 0.148531, 0.617 )
material/0 = SubResource( 14 )

[node name="Bottle2" parent="Props" instance=ExtResource( 12 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.866, 0.149054, 0.423 )
material/0 = SubResource( 15 )

[node name="Bottle3" parent="Props" instance=ExtResource( 12 )]
transform = Transform( 0.91548, -0.402363, 6.55533e-08, 0, -1.62921e-07, -1, 0.402363, 0.91548, -1.49151e-07, 0.813, 0.089198, 0.843 )
material/0 = SubResource( 16 )

[node name="Bottle4" parent="Props" instance=ExtResource( 18 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.561, 0.146008, -1.119 )
material/0 = SubResource( 17 )

[node name="Bottle5" parent="Props" instance=ExtResource( 19 )]
transform = Transform( -1.36646e-07, -0.838728, 0.544551, 1, -1.62921e-07, 0, 8.87187e-08, 0.544551, 0.838728, 1.058, 0.081767, -0.905 )
material/0 = SubResource( 18 )

[node name="Bottle6" parent="Props" instance=ExtResource( 19 )]
transform = Transform( 0.299241, 0, 0.954178, 0, 1, 0, -0.954178, 0, 0.299241, -0.377, 0.149357, -1.062 )
material/0 = SubResource( 19 )

[node name="Bottle7" parent="Props" instance=ExtResource( 18 )]
transform = Transform( 0.935857, -0.352381, 5.74101e-08, 0, -1.62921e-07, -1, 0.352381, 0.935857, -1.5247e-07, -1.104, 0.0944319, -0.177 )
material/0 = SubResource( 20 )

[node name="Rock" parent="Props" instance=ExtResource( 22 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.04151, 0.0141891, 1.17747 )

[node name="Rock2" parent="Props" instance=ExtResource( 23 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.76958, 0.0100959, -2.59588 )

[node name="Rock3" parent="Props" instance=ExtResource( 25 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.25999, 0.0134809, -2.46566 )

[node name="Rock4" parent="Props" instance=ExtResource( 22 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.293078, 0.0141889, -2.22462 )

[node name="Rock5" parent="Props" instance=ExtResource( 23 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.03227, 0.010096, 0.0315416 )

[node name="Rock6" parent="Props" instance=ExtResource( 25 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.62143, 0.0134806, 0.895697 )

[node name="Isle" type="MeshInstance" parent="."]
mesh = ExtResource( 26 )
material/0 = SubResource( 21 )

[node name="Sea" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
mesh = ExtResource( 30 )
material/0 = ExtResource( 28 )

[editable path="Campfire/Flames"]

[gd_scene load_steps=9 format=2]

[ext_resource path="res://shader-codes/flame-shaders/smoke.shader" type="Shader" id=1]


[sub_resource type="Curve" id=1]
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.48954, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), -1.95902, 0.0, 1, 0 ]

[sub_resource type="CurveTexture" id=2]
width = 1024
curve = SubResource( 1 )

[sub_resource type="ParticlesMaterial" id=3]
resource_local_to_scene = true
emission_shape = 2
emission_box_extents = Vector3( 0.02, 0.02, 0.16 )
direction = Vector3( 0, 1, 0 )
spread = 0.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 0.6
scale_curve = SubResource( 2 )
color = Color( 0.643137, 0.72549, 0.72549, 1 )

[sub_resource type="Shader" id=4]
code = "// Outline, by GDQuest
// Source: https://github.com/GDQuest/godot-shaders
shader_type spatial;
render_mode cull_front, unshaded, depth_draw_always;

uniform vec4 outline_color : hint_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform float outline_width = 1.0;



void vertex() {
	// Converts vertex position and normal to clip coordinates.
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);

	// Calculates the width based off of view distance to keep
	// the outline width constant.
	clip_position.xy += normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;

	POSITION = clip_position;
}



void fragment() {
	ALBEDO = outline_color.rgb;
	if(outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}


"

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 4 )
shader_param/outline_color = Color( 0, 0, 0, 1 )
shader_param/outline_width = 2.0

[sub_resource type="ShaderMaterial" id=6]
next_pass = SubResource( 5 )
shader = ExtResource( 1 )
shader_param/lighting = 0.0
shader_param/lighting_half_band = 0.0
shader_param/lighting_smoothness = 0.02
shader_param/rim = 0.5
shader_param/rim_amount = 0.6
shader_param/rim_smoothness = 0.05

[sub_resource type="SphereMesh" id=7]
material = SubResource( 6 )
radius = 0.1
height = 0.2
radial_segments = 16
rings = 8

[node name="WaterfallFoam" type="Particles"]
amount = 64
lifetime = 0.5
local_coords = false
process_material = SubResource( 3 )
draw_pass_1 = SubResource( 7 )

[gd_scene load_steps=11 format=2]

[ext_resource path="res://assets/shader-codes/toon-shader/smoke.shader" type="Shader" id=1]

[sub_resource type="Gradient" id=1]
offsets = PoolRealArray( 0, 0.240741, 1 )
colors = PoolColorArray( 0.333333, 0.333333, 0.333333, 0.490196, 0.333333, 0.333333, 0.333333, 0.490196, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=2]
gradient = SubResource( 1 )

[sub_resource type="Curve" id=3]
_data = [ Vector2( 0, 0 ), 0.0, 5.37563, 0, 0, Vector2( 0.242678, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.485356, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), -4.70758, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=4]
curve = SubResource( 3 )

[sub_resource type="ParticlesMaterial" id=5]
resource_local_to_scene = true
emission_shape = 1
emission_sphere_radius = 0.1
direction = Vector3( 0, 1, 0 )
spread = 0.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 1.0
scale = 1.5
scale_random = 1.0
scale_curve = SubResource( 4 )
color_ramp = SubResource( 2 )

[sub_resource type="Shader" id=6]
code = "// Outline, by GDQuest
// Source: https://github.com/GDQuest/godot-shaders
shader_type spatial;
render_mode cull_front, unshaded, depth_draw_always;

uniform vec4 outline_color : hint_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform float outline_width = 1.0;



void vertex() {
	// Converts vertex position and normal to clip coordinates.
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);

	// Calculates the width based off of view distance to keep
	// the outline width constant.
	clip_position.xy += normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;

	POSITION = clip_position;
}



void fragment() {
	ALBEDO = outline_color.rgb;
	if(outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}


"

[sub_resource type="ShaderMaterial" id=7]
resource_local_to_scene = true
shader = SubResource( 6 )
shader_param/outline_color = Color( 0, 0, 0, 1 )
shader_param/outline_width = 2.0

[sub_resource type="ShaderMaterial" id=8]
next_pass = SubResource( 7 )
shader = ExtResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/roughness = 1.0
shader_param/metallic = 0.0
shader_param/lighting = 0.0
shader_param/lighting_half_band = 0.0
shader_param/lighting_smoothness = 0.02
shader_param/specular = 0.0
shader_param/specular_glossiness = 12.0
shader_param/specular_smoothness = 0.05
shader_param/rim = 0.0
shader_param/rim_amount = 0.2
shader_param/rim_smoothness = 0.05
shader_param/emission = Color( 0, 0, 0, 1 )
shader_param/emission_energy = 1.0
shader_param/refraction = 0.0
shader_param/uv1_scale = null
shader_param/uv1_offset = null

[sub_resource type="SphereMesh" id=9]
resource_local_to_scene = true
material = SubResource( 8 )
radius = 0.1
height = 0.3
radial_segments = 16
rings = 8

[node name="Smoke" type="Particles"]
layers = 2
amount = 64
lifetime = 3.0
preprocess = 10.0
local_coords = false
process_material = SubResource( 5 )
draw_pass_1 = SubResource( 9 )

[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[ext_resource path="res://assets/shader-codes/toon-shader/base-toon.shader" type="Shader" id=1]

[sub_resource type="Shader" id=1]
code = "// Outline, by GDQuest
// Source: https://github.com/GDQuest/godot-shaders
shader_type spatial;
render_mode cull_front, unshaded, depth_draw_always;

uniform vec4 outline_color : hint_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform float outline_width = 1.0;



void vertex() {
	// Converts vertex position and normal to clip coordinates.
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);

	// Calculates the width based off of view distance to keep
	// the outline width constant.
	clip_position.xy += normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;

	POSITION = clip_position;
}



void fragment() {
	ALBEDO = outline_color.rgb;
	if(outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}


"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/outline_color = Color( 0, 0, 0, 1 )
shader_param/outline_width = 2.0

[resource]
next_pass = SubResource( 2 )
shader = ExtResource( 1 )
shader_param/albedo = Color( 0.431373, 0.0823529, 0.0823529, 1 )
shader_param/roughness = 1.0
shader_param/metallic = 0.0
shader_param/lighting = 0.0
shader_param/lighting_half_band = 0.0
shader_param/lighting_smoothness = 0.02
shader_param/specular = 0.0
shader_param/specular_glossiness = 16.0
shader_param/specular_smoothness = 0.05
shader_param/rim = 0.05
shader_param/rim_amount = 0.3
shader_param/rim_smoothness = 0.05
shader_param/emission = Color( 0, 0, 0, 1 )
shader_param/emission_energy = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
